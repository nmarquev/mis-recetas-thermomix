javascript:(function(){'use strict';const API_BASE='http://localhost:3003';const API_ENDPOINT=`${API_BASE}/api/import-html`;const overlayStyles=`#recipe-importer-overlay{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.8);z-index:999999;display:flex;justify-content:center;align-items:center;font-family:'Segoe UI',Tahoma,Geneva,Verdana,sans-serif}#recipe-importer-modal{background:white;border-radius:12px;padding:24px;max-width:500px;width:90%;max-height:80vh;overflow-y:auto;box-shadow:0 10px 30px rgba(0,0,0,0.3);position:relative}#recipe-importer-close{position:absolute;top:12px;right:16px;background:none;border:none;font-size:24px;cursor:pointer;color:#666;padding:4px 8px}#recipe-importer-close:hover{color:#000}.recipe-importer-title{color:#2c3e50;margin:0 0 16px 0;font-size:20px;font-weight:600}.recipe-importer-status{padding:12px;border-radius:6px;margin:16px 0;font-weight:500}.status-loading{background:#e3f2fd;color:#1976d2;border:1px solid #bbdefb}.status-success{background:#e8f5e8;color:#2e7d32;border:1px solid #a5d6a7}.status-error{background:#ffebee;color:#c62828;border:1px solid #ffcdd2}.recipe-preview{border:1px solid #e0e0e0;border-radius:8px;padding:16px;margin:16px 0;background:#f9f9f9}.recipe-preview h3{margin:0 0 8px 0;color:#2c3e50;font-size:18px}.recipe-preview p{margin:4px 0;color:#666;font-size:14px}.recipe-importer-buttons{display:flex;gap:12px;margin-top:20px}.btn{padding:10px 20px;border:none;border-radius:6px;cursor:pointer;font-weight:500;font-size:14px;transition:background-color 0.2s}.btn-primary{background:#4CAF50;color:white}.btn-primary:hover{background:#45a049}.btn-secondary{background:#f5f5f5;color:#666;border:1px solid #ddd}.btn-secondary:hover{background:#eeeeee}.loading-spinner{display:inline-block;width:20px;height:20px;border:3px solid #f3f3f3;border-top:3px solid #3498db;border-radius:50%;animation:spin 1s linear infinite;margin-right:8px}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}`;function getAuthToken(){try{const token=localStorage.getItem('authToken')||localStorage.getItem('token')||localStorage.getItem('jwt')||localStorage.getItem('auth_token');if(!token){throw new Error('No authentication token found. Please login to your Recipe Genius app first.')}return token}catch(error){throw new Error('Authentication token not found. Please login to your Recipe Genius app.')}}function createOverlay(){const existingOverlay=document.getElementById('recipe-importer-overlay');if(existingOverlay){existingOverlay.remove()}const styleEl=document.createElement('style');styleEl.textContent=overlayStyles;document.head.appendChild(styleEl);const overlay=document.createElement('div');overlay.id='recipe-importer-overlay';overlay.innerHTML=`<div id="recipe-importer-modal"><button id="recipe-importer-close">&times;</button><h2 class="recipe-importer-title">üç≥ Thermomix Recipe Genius</h2><div id="recipe-importer-content"><div class="recipe-importer-status status-loading"><span class="loading-spinner"></span>Analyzing page for recipes...</div></div></div>`;document.body.appendChild(overlay);document.getElementById('recipe-importer-close').onclick=function(){overlay.remove()};overlay.onclick=function(e){if(e.target===overlay){overlay.remove()}};return overlay}function updateOverlay(content){const contentEl=document.getElementById('recipe-importer-content');if(contentEl){contentEl.innerHTML=content}}function showSuccess(recipeData){const recipe=recipeData.recipe;const content=`<div class="recipe-importer-status status-success">‚úÖ Recipe found and extracted successfully!</div><div class="recipe-preview"><h3>${recipe.title}</h3><p><strong>Ingredients:</strong> ${recipe.ingredients.length} items</p><p><strong>Instructions:</strong> ${recipe.instructions.length} steps</p><p><strong>Prep Time:</strong> ${recipe.prepTime} minutes</p><p><strong>Servings:</strong> ${recipe.servings}</p>${recipe.description?`<p><strong>Description:</strong> ${recipe.description}</p>`:''}</div><div class="recipe-importer-buttons"><button class="btn btn-primary" onclick="window.open('${API_BASE.replace('3003','8081')}','_blank')">Open Recipe Genius App</button><button class="btn btn-secondary" onclick="document.getElementById('recipe-importer-overlay').remove()">Close</button></div>`;updateOverlay(content)}function showError(message){const content=`<div class="recipe-importer-status status-error">‚ùå ${message}</div><div class="recipe-importer-buttons"><button class="btn btn-secondary" onclick="document.getElementById('recipe-importer-overlay').remove()">Close</button></div>`;updateOverlay(content)}async function extractAndSendRecipe(){try{const overlay=createOverlay();let authToken;try{authToken=getAuthToken()}catch(error){showError(error.message);return}const html=document.documentElement.outerHTML;const url=window.location.href;const title=document.title;console.log('üìñ Bookmarklet: Sending recipe data to API');console.log('üìç URL:',url);console.log('üìÑ Title:',title);console.log('üìè HTML length:',html.length);const response=await fetch(API_ENDPOINT,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${authToken}`},body:JSON.stringify({html:html,url:url,title:title})});const data=await response.json();if(response.ok&&data.success){console.log('‚úÖ Recipe extracted successfully:',data);showSuccess(data)}else{console.error('‚ùå API Error:',data);showError(data.error||'Failed to extract recipe from this page')}}catch(error){console.error('üí• Bookmarklet Error:',error);showError('Network error: Could not connect to Recipe Genius app. Make sure the app is running.')}}extractAndSendRecipe()})();